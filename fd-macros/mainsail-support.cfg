# Copyright (C) 2023 Frank Roth <developer@freakydude.de>

# Internal G-Code macros to support the
# basic features needed for BigTreeTech-TouchscreenFirmware (https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware) 
# in combination with Mainsail frontend

# These are not called directly, but are encapsuled by macros defined in macros-examles.cfg or by your individual implementation.

[gcode_macro _FD_RUN_IDLE_TIMEOUT]
description:  Internal
  Starts if idle timeout has expired
  triggered by klipper
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer.extruder.target}"  
    
    M117 Idle timeout, hotend cooldown
    _SEND_TO_BTT MESSAGE="Idle timeout, hotend cooldown"

    M104 S0  # cooldown the hotend
  {% else %}
    M117 Idle timeout, poweroff
    _SEND_TO_BTT MESSAGE="Idle timeout, poweroff"
    
    # Shutdown
    TURN_OFF_HEATERS
    M84
  {% endif %}

[gcode_macro _FD_SET_PAUSE_NEXT_LAYER]
description: Enable a pause if the next layer is reached
  triggered by mainsail
variable_enabled: 0
gcode:
  {% set ENABLE = params.ENABLE | int %}

  {% if params.ENABLE is defined %}
    SET_GCODE_VARIABLE MACRO=_FD_SET_PAUSE_NEXT_LAYER VARIABLE=enabled VALUE="{ENABLE}"
  {% endif %}

[gcode_macro _FD_SET_PAUSE_AT_LAYER]
description: Enable/disable a pause if a given layer number is reached
  triggered by mainsail
variable_enabled: 0
variable_layer: 0
gcode:
  {% set ENABLE = params.ENABLE | int %}
  {% set LAYER = params.LAYER | int %}
  
  {% if params.ENABLE is defined %}
    SET_GCODE_VARIABLE MACRO=_FD_SET_PAUSE_AT_LAYER VARIABLE=enabled VALUE="{ENABLE}"
  {% endif %}

  {% if params.LAYER is defined %}
    SET_GCODE_VARIABLE MACRO=_FD_SET_PAUSE_AT_LAYER VARIABLE=layer VALUE="{LAYER}"
  {% endif %}

[gcode_macro _FD_SET_PRINT_STATS_INFO]
description: Internal
  Enables mainsail and display features
  triggered by slicer
gcode:
  {% set CURRENT_LAYER = params.CURRENT_LAYER | default(0) | int %}

  {% if params.CURRENT_LAYER is defined %}
    _BTT_NOTIFY_LAYERLEFT CURRENT={CURRENT_LAYER} MAX={printer.print_stats.info.total_layer | default(0) | int} 
  {% endif %}

[gcode_macro _FD_PAUSE]
description: Internal
  Pause the current running print
  triggered by mainsail
gcode:
  _BTT_PAUSE
  # save extruder temperature
  SET_GCODE_VARIABLE MACRO=_FD_RESUME VARIABLE=last_extruder_temp VALUE="{printer.extruder.target}"

  _FD_PARK

[gcode_macro _FD_RESUME]
description: Internal
  Resume the current running print
  triggered by mainsail
variable_last_extruder_temp: 0
gcode:
  _BTT_RESUME

  # restore extruder temperature  
  M109 S{last_extruder_temp}

  SAVE_GCODE_STATE NAME=_fd_resume_state 
  
  M83
  G1 E1 F2400

  RESTORE_GCODE_STATE NAME=_fd_resume_state

[gcode_macro _FD_CANCEL_PRINT]
description: Internal
  Cancel the current running print
  triggered by mainsail
gcode:  
  _BTT_CANCEL 
  _FD_PARK 
  _FD_SHUTDOWN  

[gcode_macro _FD_START_PRINT]
description: Internal 
  Startcode to prepare a new printing
  triggered by slicer 
gcode:
  CLEAR_PAUSE
  SET_GCODE_VARIABLE MACRO=M73 VARIABLE=progress_supported VALUE=0

  _BTT_START
  _FD_SET_PRINT_STATS_INFO

[gcode_macro _FD_END_PRINT]
description: Internal
  Endcode to finalize made printing
  triggered by slicer 
gcode:
  _BTT_END
  _FD_PARK
  _FD_SHUTDOWN

[gcode_macro _FD_SHUTDOWN]
description: Shutdown the printer
gcode:  
  CLEAR_PAUSE  
  TURN_OFF_HEATERS
  M106 S0 # Turn of extruder-fan
  G92 E0 # Reset Extruder
  M220 S100 # Reset Speed factor override percentage to default (100%)
  M221 S100 # Reset Extruder flow rate override percentage to default (100%)
  
  #M84 # Disable steppers # Solved by RUN_IDLE_TIMEOUT

[gcode_macro _FD_PARK]
gcode:
  SAVE_GCODE_STATE NAME=_fd_park_state 

  {% set PARK_X = printer.toolhead.axis_minimum.x | float %}
  {% set PARK_Y = printer.toolhead.axis_maximum.y | float %}
  {% set PARK_Z = printer.toolhead.position.z | float %}

  {% if not (printer.toolhead.position.x == PARK_X and printer.toolhead.position.y == PARK_Y) %}
    {% set PARK_Z = printer.toolhead.position.z + 50.0 | float %}  
    {% if PARK_Z > printer.toolhead.axis_maximum.z %}
      {% set PARK_Z = printer.toolhead.axis_maximum.z %}
    {% endif %}

    {% if printer.extruder.can_extrude %}
      M83 # relative extrusion
      G1 E-1 F{40 * 60} # retract filament
    {% endif %}
  {% endif %}  

  G90 # use absolute coordinates  
  G1 X{PARK_X} Y{PARK_Y} Z{PARK_Z} F{50 * 60} # move to corner of the bed to avoid ooze over centre
  G1 X{PARK_X} Y{PARK_Y} Z{PARK_Z} F{50 * 60} # move to corner of the bed to avoid ooze over centre

  RESTORE_GCODE_STATE NAME=_fd_park_state 

[gcode_macro _FD_PRIME_LINE]
description: Purges and wipes the Nozzle
gcode: 
  SAVE_GCODE_STATE NAME=_fd_prime_line_state

  {% set MIN_X = printer.toolhead.axis_minimum.x | float %}
  {% set MIN_Y = printer.toolhead.axis_minimum.y | float %}
  {% set MAX_X = printer.toolhead.axis_maximum.x | float %}
  {% set MAX_Y = printer.toolhead.axis_maximum.y | float %}

  {% set DIAMETER_NOZZLE = printer.configfile.settings.extruder.nozzle_diameter | float %}
  {% set DIAMETER_FILAMENT = printer.configfile.settings.extruder.filament_diameter | float %}

  {% set CROSSSECTION_NOZZLE = 3.14159 * DIAMETER_NOZZLE**2 / 4.0 | float %}
  {% set CROSSSECTION_FILAMENT = 3.14159 * DIAMETER_FILAMENT**2 / 4.0 | float %}

  {% set EXT_HEIGHT = 0.5 * DIAMETER_NOZZLE | float %}
  {% set EXT_WIDTH = 3.75 * DIAMETER_NOZZLE**2 / EXT_HEIGHT | float %}
  {% set EXT_CS = EXT_WIDTH * EXT_HEIGHT | float %}

  {% set X1 = 7.0 * CROSSSECTION_FILAMENT / EXT_CS / 0.85 %}
  {% set X2 = 4.0 * CROSSSECTION_FILAMENT / EXT_CS + X1 %}
  {% set X3 = 4.0 * CROSSSECTION_FILAMENT / EXT_CS + X2 %}
  {% set X4 = 4.0 * CROSSSECTION_FILAMENT / EXT_CS + X3 %}
  {% set X5 = 3.0 * CROSSSECTION_FILAMENT / EXT_CS + X4 %}
  {% set X6 = 3.0 * CROSSSECTION_FILAMENT / EXT_CS + X5 %}

  G90 ; use absolute coordinates
  G92 E0 ; reset extruder position 
  M83 # E Relative

  M117 Purge Nozzle  

  G0 X{MIN_X} Y{MIN_Y} Z15 F{30 * 60} ; go to start position
  G1 E2 F{40 * 60} ; deretraction after the initial one before nozzle cleaning
  G1 E7 X{X1} Z{EXT_HEIGHT} F{8.5 * 60} ; purge 85%
  G1 E4 X{X2} F{8.5 * 60} ; purge 100% of max
  G1 E4 X{X3} F{11.0 * 60} ; purge
  G1 E4 X{X4} F{13.5 * 60} ; purge

  M117 Wipe Nozzle
  G0 X{X5} Z0.05 F{130 * 60} ; wipe, move close to the bed
  G0 X{X6} Z{EXT_HEIGHT} F{130 * 60} ; wipe, move quickly away from the bed
  G0 Z3 F{10 * 60} ; Prevent scratching

  RESTORE_GCODE_STATE NAME=_fd_prime_line_state 
